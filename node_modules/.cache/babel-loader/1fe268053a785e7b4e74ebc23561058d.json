{"ast":null,"code":"var _jsxFileName = \"C:\\\\myapp\\\\src\\\\Appinit.js\";\nimport React, { Component } from 'react';\nimport '././bootstrap/bootstrap.css'; //var NameForm.state = {value : null,count:1}\n\nclass NameForm extends React.Component {\n  // ;\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null,\n      count: 0\n    };\n    this.setState(props => {\n      return {\n        value: props\n      };\n    });\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('Welcome: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  incrementCount() {\n    this.setState(state => {\n      // Important: read `state` instead of `this.state` when updating.\n      return {\n        count: state.count + 1\n      };\n    });\n  }\n\n  handleSomething() {\n    // Let's say `this.state.count` starts at 0.\n    this.incrementCount(); //this.incrementCount();\n    //this.incrementCount();\n    // If you read `this.state.count` now, it would still be 0.\n    // But when React re-renders the component, it will be 3.\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid bg-light\",\n      onLoad: this.handleSomething,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-group\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-justify Lemonada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Enter a NickName or your Name:\", this.state.count), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Welcome\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \", this.state.value ? this.state.value : '( ͡° ͜ʖ ͡°)')), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default NameForm;","map":{"version":3,"sources":["C:/myapp/src/Appinit.js"],"names":["React","Component","NameForm","constructor","props","state","value","count","setState","handleChange","bind","handleSubmit","event","target","alert","preventDefault","incrementCount","handleSomething","render"],"mappings":"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","sourcesContent":["\r\nimport React, {Component} from 'react';\r\nimport '././bootstrap/bootstrap.css';\r\n//var NameForm.state = {value : null,count:1}\r\nclass NameForm extends React.Component {\r\n  // ;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value:null, count:0}\r\n    this.setState((props)=>{\r\n      return {value: props\r\n      }\r\n    })\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    \r\n  }\r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n      alert('Welcome: ' + this.state.value);\r\n      event.preventDefault();\r\n    }\r\n\r\n    incrementCount() {\r\n      this.setState((state) => {\r\n        // Important: read `state` instead of `this.state` when updating.\r\n        return {count: state.count + 1}\r\n      });\r\n    }\r\n    \r\n    handleSomething() {\r\n      // Let's say `this.state.count` starts at 0.\r\n      this.incrementCount();\r\n      //this.incrementCount();\r\n      //this.incrementCount();\r\n    \r\n      // If you read `this.state.count` now, it would still be 0.\r\n      // But when React re-renders the component, it will be 3.\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"container-fluid bg-light\" onLoad={this.handleSomething} >\r\n        <div className=\"row\">\r\n          <div className=\"col\"><form className=\"form-group\" onSubmit={this.handleSubmit}>\r\n        <label className=\"text-justify Lemonada\">\r\n    <h4>Enter a NickName or your Name:{this.state.count}</h4>\r\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n        </label>\r\n        <input type=\"submit\" value=\"\" />\r\n      </form></div>\r\n          <div className=\"col\"><div>\r\n        <p ><h4>Welcome</h4><h5> {this.state.value?this.state.value:'( ͡° ͜ʖ ͡°)'}</h5></p>\r\n        <br></br>\r\n      </div></div>\r\n\r\n        </div>\r\n\r\n      \r\n      \r\n\r\n    </div>  \r\n    );\r\n\r\n  }\r\n}\r\n\r\n  export default NameForm;"]},"metadata":{},"sourceType":"module"}